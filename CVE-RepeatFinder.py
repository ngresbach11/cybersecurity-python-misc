import os
import re
import csv

cve_pattern = 'CVE-\d{4}-\d{4,7}' # regex for cve
cveList = []
cveListUnique = []
countCVE = {}
containerList = []
dirPath = '/home/nate/python/containerscans/' # Set file path for results to parse through

def openFile(filename):
	f = open(filename, "r")

def searchCVEPattern(filename): # Searches the file for anything matching CVE regex set with string cve_pattern
	pattern = re.compile(cve_pattern)
	for i, line in enumerate(open(dirPath + filename)):
	    for match in re.finditer(pattern, line):
	        if match.group() not in cveList:
	        	cveListUnique.append(match.group()) # Did this to get a list to iterate through when logging results
	        cveList.append(match.group()) # Adding to the non-unique list so I can use countX() to determine how common CVE is

def countX(lst, x): # Counts number of occurances of a substring "x" within "lst"
    count = 0
    for ele in lst:
        if (ele == x):
            count = count + 1
    return count

def appendOccurances(cve):
	countCVE[cve] = countX(cveList,cve) # counts number of times a CVE shows up in files scanned

def enumerateFiles():
	for path in os.listdir(dirPath):
	    if os.path.isfile(os.path.join(dirPath, path)): # check if current path is a file. Used to prevent detecting subdirectories
	        containerList.append(path)

def exportResults(): # Exports results to CVE in format "CVE Number", "# occurances"
	with open("countcveresults.csv", mode="w") as csvfile: # Had this set to a for appending, changing to w to overwrite
		fieldnames = ['CVE','Occurances']
		writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
		for cve in cveListUnique:
			writer.writerow({'CVE': cve, 'Occurances': countCVE[cve]})

if __name__ == "__main__":
	enumerateFiles()
	print("Working, scanning through files: " + str(containerList))
	for result in containerList: # Iterate through every file found in directory dirPath
		searchCVEPattern(result)
	for cve in cveListUnique: # Iterate through every unique CVE found
		appendOccurances(cve)
	exportResults()
	print("Done.")